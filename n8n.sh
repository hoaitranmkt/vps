#!/bin/bash
set -e

# ====================== KI·ªÇM TRA QUY·ªÄN ROOT =========================
if [[ $EUID -ne 0 ]]; then
   echo "‚ùå Vui l√≤ng ch·∫°y script b·∫±ng quy·ªÅn root: sudo ./install-n8n.sh"
   exit 1
fi

# ====================== NH·∫¨P DOMAIN =========================
read -p "üåê Nh·∫≠p domain/subdomain cho n8n (v√≠ d·ª•: n8n.example.com): " N8N_DOMAIN

# ====================== KI·ªÇM TRA DOMAIN ƒê√É TR·ªé IP CH∆ØA =========================
check_domain() {
    local domain=$1
    local server_ip=$(curl -s https://api.ipify.org)
    local domain_ip=$(dig +short "$domain")

    if [[ "$domain_ip" == "$server_ip" ]]; then
        return 0
    else
        return 1
    fi
}

if check_domain "$N8N_DOMAIN"; then
    echo "‚úÖ Domain ƒë√£ tr·ªè ƒë√∫ng IP. Ti·∫øp t·ª•c c√†i ƒë·∫∑t..."
else
    echo "‚ùå Domain ch∆∞a tr·ªè ƒë√∫ng IP!"
    echo "Vui l√≤ng c·∫≠p nh·∫≠t DNS tr·ªè v·ªÅ: $(curl -s https://api.ipify.org)"
    exit 1
fi

# ====================== BI·∫æN TH∆Ø M·ª§C =========================
N8N_DIR="/home/n8n"

# ====================== H√ÄM KI·ªÇM TRA & C√ÄI G√ìI =========================
install_if_missing() {
  for pkg in "$@"; do
    if ! dpkg -s "$pkg" >/dev/null 2>&1; then
      echo "üì¶ ƒêang c√†i ƒë·∫∑t: $pkg"
      apt install -y "$pkg"
    else
      echo "‚úÖ G√≥i ƒë√£ c√≥: $pkg"
    fi
  done
}

# ====================== C·∫¨P NH·∫¨T & C√ÄI G√ìI C∆† B·∫¢N =========================
apt update
install_if_missing curl ca-certificates gnupg software-properties-common \
                   docker-compose-plugin nginx ufw certbot \
                   python3-certbot-nginx dnsutils

# ====================== C√ÄI ƒê·∫∂T DOCKER CH√çNH TH·ª®C (Docker CE) =========================
if ! command -v docker &> /dev/null; then
  echo "üê≥ C√†i Docker t·ª´ Docker CE ch√≠nh th·ª©c..."
  install -m 0755 -d /etc/apt/keyrings
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  chmod a+r /etc/apt/keyrings/docker.gpg
  echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
    tee /etc/apt/sources.list.d/docker.list > /dev/null

  apt update
  install_if_missing docker-ce docker-ce-cli containerd.io
fi

# ====================== B·∫¨T & KH·ªûI ƒê·ªòNG Docker =========================
systemctl enable docker
systemctl start docker

# ====================== C·∫§U H√åNH T∆Ø·ªúNG L·ª¨A =========================
ufw allow OpenSSH
ufw allow 80
ufw allow 443
ufw allow 5678
ufw --force enable

# ====================== T·∫†O docker-compose.yml =========================
mkdir -p "$N8N_DIR"
cat << EOF > "$N8N_DIR/docker-compose.yml"
version: "3.8"
services:
  n8n:
    image: n8nio/n8n
    restart: always
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=${N8N_DOMAIN}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - WEBHOOK_URL=https://${N8N_DOMAIN}
      - NODE_ENV=production
      - GENERIC_TIMEZONE=Asia/Ho_Chi_Minh
    volumes:
      - $N8N_DIR:/home/node/.n8n
EOF

# ====================== C·∫§U H√åNH NGINX =========================
cat << EOF > /etc/nginx/sites-available/n8n
server {
    listen 80;
    server_name ${N8N_DOMAIN};

    location / {
        proxy_pass http://localhost:5678;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_cache_bypass \$http_upgrade;
    }
}
EOF

ln -sf /etc/nginx/sites-available/n8n /etc/nginx/sites-enabled/
nginx -t && systemctl reload nginx

# ====================== SSL CERTBOT =========================
certbot --nginx --non-interactive --agree-tos -m admin@$N8N_DOMAIN -d $N8N_DOMAIN

# ====================== PH√ÇN QUY·ªÄN =========================
chown -R 1000:1000 "$N8N_DIR"
chmod -R 755 "$N8N_DIR"

# ====================== KH·ªûI ƒê·ªòNG n8n =========================
cd "$N8N_DIR"
docker compose up -d

# ====================== ALIAS C·∫¨P NH·∫¨T n8n =========================
for alias_name in n8n-update update-n8n; do
  if ! grep -q "alias $alias_name=" ~/.bashrc; then
    echo "alias $alias_name='cd $N8N_DIR && docker compose down && docker compose pull && docker compose up -d'" >> ~/.bashrc
    echo "‚úÖ Alias '$alias_name' ƒë√£ ƒë∆∞·ª£c th√™m v√†o ~/.bashrc"
  else
    echo "‚ÑπÔ∏è Alias '$alias_name' ƒë√£ t·ªìn t·∫°i, b·ªè qua."
  fi
done

source ~/.bashrc || true

# ====================== TH√îNG B√ÅO =========================
echo ""
echo "‚úÖ C√ÄI ƒê·∫∂T HO√ÄN T·∫§T!"
echo "üåê Truy c·∫≠p n8n t·∫°i: https://${N8N_DOMAIN}"
echo "üí° S·ª≠ d·ª•ng 'n8n-update' ƒë·ªÉ c·∫≠p nh·∫≠t n8n nhanh ch√≥ng."
